I"s<h1 id="problem">Problem</h1>
<p>Inspired from problem 26 and 80 from leetcode, problem has been changed to be as follow:</p>

<p>Given a sorted array nums, remove the duplicates in-place such that each element appear only <strong>max_appear_time</strong> and return the new length. Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p>

<h1 id="solution">Solution</h1>
<p>This problem is related to the topic of array and two pointers.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">List</span>


<span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">removeDuplicates</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">],</span> <span class="n">max_appear_time</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="s">"""
        Inspired from discussion
        Refer to 26. Remove Duplicates from Sorted Array
        """</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">nums</span><span class="p">:</span>
            <span class="k">return</span>
        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="c1"># flag = False
</span>        <span class="c1"># max_appear_time = 1
</span>        <span class="n">appear_time</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">lBackspace</span> <span class="n">String</span> <span class="n">Compareen</span><span class="p">(</span><span class="n">nums</span><span class="p">)):</span>
            <span class="k">if</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]:</span>
                <span class="k">if</span> <span class="n">appear_time</span> <span class="o">!=</span> <span class="n">max_appear_time</span><span class="p">:</span>
                    <span class="c1"># flag = True
</span>                    <span class="n">appear_time</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">appear_time</span> <span class="o">=</span> <span class="mi">1</span>
                <span class="c1"># flag = False
</span>                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</code></pre></div></div>
<p>Methond of two pointer is used in this problems. Similar problems using two pointer methods are:</p>
<ol>
  <li>283 move zeros</li>
  <li>27 remove element</li>
</ol>
:ET