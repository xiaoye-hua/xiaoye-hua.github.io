I"o<h1 id="problem">Problem</h1>
<p>Leetcode problems:</p>
<ol>
  <li>136 sinlge number</li>
  <li>137 single number II</li>
  <li>260 single num III</li>
</ol>

<h1 id="solution">Solution</h1>
<p>There are two aprroches to solve these problems</p>
<ol>
  <li>Hash table: hash table is a very important tool to solve problem related to array. dict in Python is implemented with hash table.</li>
  <li>Bit manipulation: not so clear about this approach, I’ll add these part latter</li>
</ol>

<h2 id="hash-table">Hash Table</h2>
<p>Take 137 as an example, solutions are as follows:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">List</span>


<span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">singleNumber</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="n">common_time</span> <span class="o">=</span> <span class="mi">3</span>
        <span class="n">special_time</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">result_dict</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">result_dict</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">if</span> <span class="n">result_dict</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">==</span> <span class="n">common_time</span><span class="p">:</span>
                    <span class="k">del</span> <span class="n">result_dict</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="n">result_dict</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">return</span> <span class="nb">list</span><span class="p">(</span><span class="n">result_dict</span><span class="p">.</span><span class="n">keys</span><span class="p">())[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="bit-manipulation">Bit Manipulation</h2>
<p>I’ll cover the approach latter.</p>
:ET